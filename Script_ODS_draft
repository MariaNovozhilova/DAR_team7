from airflow import DAG
import datetime
from airflow.operators.dummy_operator import DummyOperator
from airflow.operators.python_operator import PythonOperator
from airflow.operators.postgres_operator import PostgresOperator
from airflow.models import Variable

tables = ['''
         'базы_данных', 'базы_данных_и_уровень_знаний_сотру', 'инструменты', 'инструменты_и_уровень_знаний_сотр',
         'образование_пользователей', 'опыт_сотрудника_в_отраслях', 'опыт_сотрудника_в_предметных_обла', 
         'отрасли', 'платформы', 'платформы_и_уровень_знаний_сотруд', 'предметная_область', 'резюмедар', 
         'сертификаты_пользователей', 'сотрудники_дар', 'среды_разработки', 'среды_разработки_и_уровень_знаний_', 
         'технологии' , 'технологии_и_уровень_знаний_сотру', 'типы_систем', 'типы_систем_и_уровень_знаний_сотру', 
         'уровень_образования', 'уровни_владения_ин', 'уровни_знаний', 'уровни_знаний_в_отрасли', 
         'уровни_знаний_в_предметной_област', 'фреймворки', 'фреймворки_и_уровень_знаний_сотру', 'языки',
         'языки_пользователей', 'языки_программирования', 'языки_программирования_и_уровень'
'''
]



config = Variable.get("hello", deserialize_json=True)

dag = DAG('postgres_update', description='postgres',
          schedule_interval=config['time_start'],
          start_date=datetime.datetime(2024, 7, 8), catchup=False)
start_step = DummyOperator(task_id="start_step", dag=dag)

# цикл для перебора таблиц
#  
for table in tables:
    extract_SQL = "SELECT * FROM source_data." + base
    
    extract_step = PostgresOperator(task_id="extract_step",
                            sql=extract_SQL,
                            postgres_conn_id='test_conn',
                            dag=dag)

    load_SQL = "CREATE IF NOT EXISTS etl_db_7." + base
    
    insert_step = PostgresOperator(task_id="insert_step",
                            sql=load_SQL,
                            postgres_conn_id='db7_conn',
                            dag=dag)

end_step = DummyOperator(task_id="end_step", dag=dag)

start_step >> extract_step >> insert_step >> end_step
